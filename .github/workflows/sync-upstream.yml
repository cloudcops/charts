# This is a GitHub Actions workflow that syncs a fork with its upstream repository.
# It runs on a schedule and creates a pull request with any new changes.

name: Sync Upstream Fork

on:
  # Trigger the workflow to run weekly at 02:00 on Monday.
  # schedule:
  #   - cron: '0 2 * * 1'
  push:
    branches:
      - main
  
  # Allow the workflow to be run manually from the GitHub Actions tab.
  workflow_dispatch:

jobs:
  sync:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    
    # Check if the commit is from the bot to prevent infinite loops.
    # If the last commit message contains "[skip-ci]", the job will be skipped.
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"

    steps:
      # Step 1: Check out your repository.
      # This is necessary for the workflow to access your repo's content.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # We need to fetch all history for a proper merge, not just the last commit.
          fetch-depth: 0
          # Use a personal access token (PAT) if you want to trigger other workflows.
          # The default GITHUB_TOKEN does not have permissions to trigger other workflows.
          # token: ${{ secrets.PAT }} 

      # Step 2: Configure Git user.
      # This sets the author for the commits the action will make.
      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # Step 3: Run the sync and create a pull request if there are changes.
      # This action handles fetching the upstream, merging, and creating the PR.
      - name: Create Pull Request after syncing with upstream
        uses: peter-evans/create-pull-request@v6
        with:
          # The GITHUB_TOKEN is automatically created by Actions and has permissions for this repo.
          token: ${{ secrets.GITHUB_TOKEN }}
          
          # The path to your local repository.
          path: '.'
          
          # --- Commit and Branch Details ---
          # The commit message for the sync.
          commit-message: "chore: sync from bitnami/charts"
          
          # The author and committer of the sync commit.
          author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          committer: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          
          # The name of the branch to create for the pull request.
          # The action will automatically handle creating a unique branch name if this one exists.
          branch: "sync-with-upstream"
          
          # A prefix for the branch name if you want the action to generate a unique name.
          branch-suffix: "short-commit-hash"

          # --- Pull Request Details ---
          # The title of the pull request.
          title: "chore: Sync with upstream bitnami/charts"
          
          # The body content of the pull request.
          body: |
            This is an automated PR to sync this fork with the upstream `bitnami/charts` repository.
            
            It includes the latest changes from the upstream `main` branch.
            
            *[skip-ci]*
          
          # Labels to add to the pull request for easy filtering.
          labels: |
            automated-sync
            upstream-sync
            
          # --- Syncing Logic ---
          # The repository to sync from.
          upstream-repository: 'bitnami/charts'
          
          # The branch to sync from in the upstream repository.
          upstream-branch: 'main'
          
          # The branch in your fork to merge the changes into.
          fork-branch: 'main'
          
          # Set to true to delete the branch after the PR is merged or closed.
          delete-branch: true
